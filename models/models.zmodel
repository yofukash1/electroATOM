enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id              String       @id @default(uuid())
    name            String?
    email           String?      @unique
    pictureUrl      String?      @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation String?

    status          UserStatus   @default(VERIFIED)

    // this is the role of the user for the application
    globalRole      String       @default('USER')
    password        String?      @password @omit
    createdAt       DateTime     @default(now())
    updatedAt       DateTime     @updatedAt @default(now())

    predictions     Prediction[] @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Language {

    id           String        @id @default(uuid())
    code         String
    name         String
    isActive     Boolean

    translations Translation[] @relation("language")
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt @default(now())
    @@allow("all", true)
}

model Prediction {

    id               String            @id @default(uuid())
    title            String
    description      String?
    status           String
    predictionDate   String

    userId           String
    user             User?             @relation(fields: [userId], references: [id], name: "user")

    predictionImages PredictionImage[] @relation("prediction")
    createdAt        DateTime          @default(now())
    updatedAt        DateTime          @updatedAt @default(now())
    @@allow("all", true)
}

model PredictionImage {

    id           String      @id @default(uuid())
    imageUrl     String
    imageType    String?
    fileSize     Float?

    predictionId String
    prediction   Prediction? @relation(fields: [predictionId], references: [id], name: "prediction")

    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model Translation {

    id         String    @id @default(uuid())
    key        String
    value      String

    languageId String
    language   Language? @relation(fields: [languageId], references: [id], name: "language")

    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt @default(now())
    @@allow("all", true)
}

